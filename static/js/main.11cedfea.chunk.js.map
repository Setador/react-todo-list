{"version":3,"sources":["Form.js","Table.js","App.js","index.js"],"names":["Form","props","handleChange","event","target","name","value","setState","onFormSubmit","preventDefault","state","length","handleSubmit","initialState","this","className","onSubmit","type","id","placeholder","onChange","Component","TableHeader","TableBody","rows","characterData","map","row","index","key","onClick","removeCharacter","Table","App","characters","filter","character","i","ReactDOM","render","document","getElementById"],"mappings":"wRA0CeA,E,YAvCX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KASVC,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBC,EADY,EACZA,KAAMC,EADM,EACNA,MAEd,EAAKC,SAAL,eACKF,EAAQC,KAdE,EAkBnBE,aAAe,SAACL,GACZA,EAAMM,iBACD,EAAKC,MAAML,KAAKM,SAGrB,EAAKV,MAAMW,aAAa,EAAKF,OAC7B,EAAKH,SAAS,EAAKM,gBArBnB,EAAKA,aAAe,CAChBR,KAAM,IAGV,EAAKK,MAAQ,EAAKG,aAPH,E,sEA2BT,IACER,EAASS,KAAKJ,MAAdL,KAER,OACI,0BAAMU,UAAU,aAAaC,SAAUF,KAAKN,cACxC,2BAAOS,KAAK,OAAOZ,KAAK,OAAOa,GAAG,OAAOC,YAAY,kBAAkBb,MAAOD,EAAMe,SAAUN,KAAKZ,eACnG,4BAAQe,KAAK,UAAb,e,GAlCGI,aCCbC,EAAc,WAChB,OACI,+BACI,4BACI,uCAMVC,EAAY,SAAAtB,GACd,IAAMuB,EAAOvB,EAAMwB,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIb,UAAU,UAAUc,IAAKD,GACzB,wBAAIV,GAAIU,GAAQD,EAAItB,MACpB,4BACI,yBAAKU,UAAU,aACX,0BAAMA,UAAU,YAAYe,QAAS,kBAAM7B,EAAM8B,gBAAgBH,KAC7D,uBAAGb,UAAU,wBASrC,OAAO,+BAAQS,IAaJQ,EAVD,SAAC/B,GAAW,IACdwB,EAAmCxB,EAAnCwB,cAAeM,EAAoB9B,EAApB8B,gBACnB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWN,cAAeA,EAAeM,gBAAiBA,MCC3DE,G,iNAhCXvB,MAAQ,CACJwB,WAAY,I,EAGhBH,gBAAkB,SAAAH,GAAU,IAChBM,EAAe,EAAKxB,MAApBwB,WAER,EAAK3B,SAAS,CACV2B,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAMT,Q,EAKzBhB,aAAe,SAAAwB,GACX,EAAK7B,SAAS,CAAC2B,WAAW,GAAD,mBAAM,EAAKxB,MAAMwB,YAAjB,CAA6BE,O,wEAGhD,IACEF,EAAepB,KAAKJ,MAApBwB,WAER,OACI,yBAAKnB,UAAU,aACX,0CACA,kBAAC,EAAD,CAAMH,aAAcE,KAAKF,eACzB,6BACA,kBAAC,EAAD,CAAOa,cAAeS,EAAYH,gBAAiBjB,KAAKiB,uB,GA3BtDV,cCDlBiB,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.11cedfea.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.initialState = {\r\n            name: ''\r\n        };\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!this.state.name.length) {\r\n            return;\r\n        }\r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    render() {\r\n        const { name } = this.state; \r\n        \r\n        return (\r\n            <form className=\"submitForm\" onSubmit={this.onFormSubmit}>\r\n                <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Add New Task...\" value={name} onChange={this.handleChange} />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Form from './Form';\r\n\r\nconst TableHeader = () => { \r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Task</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nconst TableBody = props => { \r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr className=\"rowLine\" key={index}>\r\n                <td id={index}>{row.name}</td>\r\n                <td>\r\n                    <div className=\"todo-icon\">\r\n                        <span className=\"removeBtn\" onClick={() => props.removeCharacter(index)}>\r\n                            <i className=\"fas fa-trash\" />\r\n                        </span>\r\n                    </div>\r\n                </td>\r\n                \r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return <tbody>{rows}</tbody>;\r\n}\r\n\r\nconst Table = (props) => {\r\n    const { characterData, removeCharacter } = props;\r\n        return (\r\n            <table>\r\n                <TableHeader />\r\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n            </table>\r\n        );\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\n\r\nimport uuid from \"uuid\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        characters: [],\r\n    };\r\n\r\n    removeCharacter = index => {\r\n        const { characters } = this.state;\r\n    \r\n        this.setState({\r\n            characters: characters.filter((character, i) => { \r\n                return i !== index;\r\n            })\r\n        });\r\n    }\r\n\r\n    handleSubmit = character => {\r\n        this.setState({characters: [...this.state.characters, character]});\r\n    }\r\n\r\n    render() {\r\n        const { characters } = this.state;\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <h3>To-do List</h3>\r\n                <Form handleSubmit={this.handleSubmit} />\r\n                <br />\r\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById(\"root\"))"],"sourceRoot":""}